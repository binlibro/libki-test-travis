sudo: required

env:
  global:
    - IMAGE_NAME=binlibro/libki-server
    - IMAGE_NAME_CI=binlibro/libki-server-ci-artifacts
    - DOCKER_USERNAME=binlibro
    - DOCKER_PASSWORD=123123123

jobs:
  include:

    - stage: build docker image
      services:
        - docker

      before_script:
        - version="$TRAVIS_COMMIT"
        - docker pull "$IMAGE_NAME" || true

      script:
        - docker build --pull -f docker/Dockerfile --cache-from "$IMAGE_NAME" --tag "$IMAGE_NAME_CI" .

      after_script:
        - docker images

      before_deploy:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker tag "$IMAGE_NAME_CI" "${IMAGE_NAME_CI}:${version}"

      deploy:
        provider: script
        script: docker push "${IMAGE_NAME_CI}:${version}"
        on:
          branch: master


    - stage: test docker image
      services:
        - docker

      before_script:
        - version="$TRAVIS_COMMIT"
        - docker pull "$IMAGE_NAME_CI:${version}" || true

      script:
        - docker network create libki-net
        - docker run --name libki-mariadb --network libki-net -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=libki --rm -d mariadb:10.3.5
        - sleep 30 # Wait a few seconds for mariadb to come up
        - docker ps
        - docker run --name libki-test-server --network libki-net -e 'LIBKI_INSTANCE=demo' -e 'LIBKI_DB_DSN=dbi:mysql:libki;host=libki-mariadb;port=3306' -e 'LIBKI_DB_USER=root' -e 'LIBKI_DB_PASSWORD=password' -e 'LIBKI_DB_HOST=libki-mariadb' -e 'LIBKI_DB_PORT=3306' -e 'LIBKI_DB_DATABASE=libki' -d "${IMAGE_NAME_CI}:${version}"
        - docker ps
        - sleep 30 # Wait a few seconds for libki to come up
        - docker ps
        - docker logs libki-test-server
        - docker exec -t libki-test-server /app/installer/update_db.pl
        - docker exec -t libki-test-server prove /app/t/01app.t
        - docker exec -t libki-test-server prove /app/t/stdout.t
        - docker exec -t -e TEST_POD=1 libki-test-server prove /app/t/02pod.t
        - docker exec -t -e TEST_POD=1 libki-test-server prove /app/t/03podcoverage.t

      after_script:
        - docker images

      before_deploy:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker tag "$IMAGE_NAME_CI:${version}" "${IMAGE_NAME}:latest"

      deploy:
        provider: script
        script: docker push "${IMAGE_NAME}" 
        on:
          branch: master

notifications:
  slack:
    secure: PJU6s8zH1KYSMkrM2/ATcJdbZoF9tg31fqo3KUQ/Poh6VKodL2JYPsWemTOgTITKNqlC2ffoJahbevSHiG7B2IQX4/ykDE2fl+ssWqygSTJh+If8gsYaypQEJ/oXpWS6q1D2hN1lRoJWvKgBIBpE1Tx7pUajasYtwOaSkOvui/Hr5WpMZw78h+apF0/4RmdJZsBHR3Zsm/YeRVyTrqcQjsZFfgfTx6l+F29J6A9Wh6GLFdD/3EQmNWh1+mYrGA6cM465QTsBBvFXK9ax26fwMMeneQEmOT147bcc+Pakm/K6jZcSxIPilbarshMxfjTtHoIknRZRocAVsaB8rPdYHHefbO0qFqBSqP0tGkXD8SAny1qg59p8TLmNi8ILxq0qGNY95Gi7bPdnLMBvl/vL39H5bfPFf39Gle9EN6VR7e2L4QyODj3hxHbVysvgMXNW0ucO301S4dQnNwOPJBiF0+u2HZ5D7pOzt8ZMmZTCkwxLLi+jh37KofGhaTZGaJ0pB7GUANrgg+0TtQDO8y67zSJSNumYCzhmKKlHEISL5UfJG6RuRzf23Kc3TmPE3llyzM796ymu6ZbnPdv3qK4puNObDfvYvIWaZ2wlXq/n8Xi2PvQXjeZDRzcejUXCVaBgs6Vrdsucy5C3zMY2gAJ7kYAPAJnwkMpoy7FxbdoT7U4=
